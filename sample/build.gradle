apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

static def getGitCommitCount() {
    def process = "git rev-list HEAD --count".execute()
    return process.text.toInteger()
}

def version = '1.0'

android {
    signingConfigs {
        release {
            keyAlias 'test'
            keyPassword 'testtest'
            storeFile file('test_release_keystore.jks')
            storePassword 'testtest'
        }
    }
    compileSdkVersion defaultCompileSdkVersion
    defaultConfig {
        applicationId "info.dbprefes.sample"
        minSdkVersion defaultMinSdkVersion
        targetSdkVersion defaultTargetSdkVersion
        versionCode getGitCommitCount()
        versionName version + "." + versionCode

        multiDexEnabled true
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    lintOptions {
        // Turns off checks for the issue IDs you specify.
        //disable 'TypographyFractions','TypographyQuotes'

        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        //enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'

        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        //check 'NewApi', 'InlinedApi'

        abortOnError true
        ignoreWarnings false

        xmlReport false
        htmlOutput file("../lint-sample-report.html")
    }

//    testBuildType "release"

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix ".debug"
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro"
            //test apk will have proguard applied to it so we detect any crashes or anomalies during espresso tests
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), "$projectDir/proguard-rules.pro", "$projectDir/proguard-test-rules.pro"
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }

}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.code.gson:gson:2.8.7'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api project(':DBPrefs')

    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    //  UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
}
